Drupal 7 Patterns Documentation
===============================
QScience Team <qlectives.eu>
v0.1, Aug 2011

// meta-data
:keywords: patterns, drupal, configuration, import, export
:description: Patterns allows easy configuration

Introduction
------------

Complex websites and web applications can be created by combining
configurations of Modules, Fields, Content Types, Menus, Blocks,
Categories, Roles / Permissions, etc.. This site setup and
configuration process is a very time consuming and repetitive
bottleneck.

Patterns module is built to bypass this bottleneck by managing and
automating site configuration. Site configuration is stored in YAML or
XML files called Patterns which are easy to read, modify, manage, &
share and can be executed manually or as a part of an automated web
site deployment.

[[pattern-example]]
What is a Pattern?
------------------

A pattern is a file is composed by a +info+ section and a sequence of
directives of the type +create+, +modify+, +delete+ grouped in
categories.

Categories can be arbitrarily defined (except for the reserved word
+info+) and are executed sequentially.


----------------------
# This is a comment
# Example Pattern

info: # mandatory name
  title: New Vocabulary
  description: Adds a new vocabulary to the website 
  author: QScience
  category: Examples
  
actions: # any name is good for this category

  - create: vocabulary
        name: Another Vocabulary
        machine_name: anothervoc
        description: Another interesting vocabulary
        hierarchy: 0

  - modify: vocabulary
        machine_name: anothervoc
	description: It was not that interesting after all
	# vid: 2

  - delete: vocabulary
        machine_name: anothervoc
        # vid: 2
        

-------------------

Pattern execution modes
----------------------

Patterns execution can follow two distinct behaviors:

. *Extend*: adds the settings defined in the pattern file into the
    current instance, and leave untouched what not explicitly
    specified.

. *Run-Over*: re-configures the whole web site in order to create an
    instance with _exactly_ the settings defined by the pattern, and
    removes everything not explicitly specified.

The action performed by directive +create+ changes according to the
behavior selected for the execution.



- *create*:  
	     . _extends_ : always create a new entity;
	     . _run-over_:  always check if the target entity is existing, if not creates it. 

- *modify*: checks if the target entity is existing and then modify
   it. Does nothing if the entity is not found;

- *delete*: checks if the target entity is existing and then delete
   it. Does nothing if the entity is not found.


Entity Matching
~~~~~~~~~~~~~~~~~

Entities are matched on the base of their +id+, if provided, or more
commonly their +machine name+. 
