<?php
/**
 * @file
 * SimpleTests for the Shortcut component of Patterns.
 *
 */

class PatternsShortcutTestCase extends PatternRunTestCase {

  const SHORTCUT_TESTS_DIR = 'tests/shortcut/';

  public static function getInfo() {
    return array(
      'name' => 'shortcut component',
      'description' => 'Tests shortcut pattern',
      'group' => 'Patterns',
    );
  }

  public function setUp() {
    parent::setUp();
    $this->admin_user = $this->drupalCreateUser(array('administer site configuration', 'access administration pages', 'administer patterns', 'administer shortcuts', 'switch shortcut sets', 'customize shortcut links'));
    $this->drupalLogin($this->admin_user);
  }

  /**
  * Test the:
  *
  *    * add a new set 'new_set_fortest'
  *    * add a new shortcut link to the new set 'new_set_fortest'  which add before
  *    * TODO edit the link, which add before
  *    * TODO delete the link, which just edit
  *    * change the set "new_set_fortest" name to "newer_set_fortest"
  *    * delete the set "newer_set_fortest"
  *    * TODO switch set for user
  */

  public function test_shortcut() {

    //for add a new set 'new_set_fortest'
    parent::runFile('shortcut_add_set.yaml', 'add new shortcut set (create)', PatternsShortcutTestCase::SHORTCUT_TESTS_DIR);
    $query_add_set = db_select('shortcut_set', 'ss')
            ->fields('ss', array('set_name', 'title'))
            ->condition('ss.title', 'new_set_fortest')
            ->execute()
            ->fetchAssoc();
    $this->assertTrue($query_add_set, t('add a new set \'new_set_fortest\' works fine'));
    $num = count($query_add_set);
    $this->assert('pass', $num);
    foreach ($query_add_set as $key => $value) {
      $this->assert('pass', $value);
    }

    //for add a new shortcut link to the new set which add before
    parent::runFile('shortcut_add_link.yaml', 'add a link to a shortcut set (create)', PatternsShortcutTestCase::SHORTCUT_TESTS_DIR);
    $query = db_select('menu_links', 'ml')
            ->fields('ml', array('menu_name', 'mlid', 'link_path', 'link_title'))
            ->condition('ml.menu_name', $query_add_set['set_name'])
            ->condition('ml.link_title', 'link_admcont')
            ->condition('ml.link_path', 'admin/content')
            ->execute()
            ->fetchAssoc();
    $this->assertTrue($query, t('add shorcut link works fine'));
    $num = count($query);
    $this->assert('pass', $num);
    foreach ( $query as $key => $value) {
      $this->assert('pass', $value);
    }

    //for switch user's shortcut set
    //TODO the user'name is diffierernt from each test.
    /*
    parent::runFile('shortcut_set_switch.yaml', 'switch shortcut set for users (modify)', PatternsShortcutTestCase::SHORTCUT_TESTS_DIR);
    $query = db_select('shortcut_set_users', 'ssu')
            ->fields('ssu', array('set_name', 'uid'))
            ->condition('ssu.uid', 1)
            ->condition('ssu.set_name', $query_add_set['set_name'])
            ->execute()
            ->fetchAssoc();
    $this->assertTrue($query, t('Switch user\'s shortcut set works fine'));
    $num = count($query);
    $this->assert('pass',$num);
    foreach ( $query as $key => $value) {
      $this->assert('pass', $value);
    }
    */

    //for edit the link, which add before
    //TODO the link's Id is diffierent from each PC.
    //for delete the link, which just edit
    //TODO the link's Id is diffierent from each PC.

    //for change the set "new_set_fortest" name to "newer_set_fortest"
    parent::runFile('shortcut_edit_set.yaml', 'edit the shortcut set name(modify)', PatternsShortcutTestCase::SHORTCUT_TESTS_DIR);
    $query = db_select('shortcut_set', 'ss')
            ->fields('ss', array('set_name', 'title'))
            ->condition('ss.title', 'newer_set_fortest')
            ->condition('ss.set_name', $query_add_set['set_name'])
            ->execute()
            ->fetchAssoc();
    $this->assertTrue($query, t('edit set works fine'));
    $num = count($query);
    $this->assert('pass', $num);
    foreach ( $query as $key => $value) {
      $this->assert('pass', $value);
    }

    //for delete the set, which add before
    parent::runFile('shortcut_delete_set.yaml', 'delete a shortcut set (delete)', PatternsShortcutTestCase::SHORTCUT_TESTS_DIR);
    $query = db_select('shortcut_set', 'ss')
            ->fields('ss', array('set_name', 'title'))
            ->condition('ss.title', 'newer_set_fortest')
            ->condition('ss.set_name', $query_add_set['set_name'])
            ->execute()
            ->fetchAssoc();
    $this->assertFalse($query, t('delete set works fine'));
    $num = count($query);
    $this->assert('pass', $num);

}
}
