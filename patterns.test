<?php

/**
 * @file
 * SimpleTests for Patterns.
 */

class PatternsPrivilegesTestCase extends DrupalWebTestCase {
  public static function getInfo() {
    return array(
      'name' => 'Test running simple patterns using Quick Run',
      'description' => 'Tests if the Quick Run interface works as expected. Also, checks for some permissions.',
      'group' => 'Patterns',
    );
  }

  public function setUp() {
    // Enable any modules required for the tests.
    parent::setUp('patterns');
    // TODO: how to ensure that Spyc is installed?

    // Create users.
    $this->pat_user = $this->drupalCreateUser(array('administer patterns'));
    $this->std_user = $this->drupalCreateUser(array());
  }

  /**
   * Login users, load the Patterns list page.
   */
  function testPatterns() {
    // Login the patterns administrator.
    $this->drupalLogin($this->pat_user);
    $this->verifyAccess(200);
    
    // Login a regular user.
    $this->drupalLogin($this->std_user);
    $this->verifyAccess(403);
  }

  /**
   * Verify the logged in user has the desired access to the various menu nodes.
   *
   * @param integer $response HTTP response code.
   */
  private function verifyAccess($response = 200) {
    // View patterns list.
    $this->drupalGet('admin/patterns');
    $this->assertResponse($response);
    if ($response == 200) {
      $this->assertText(t('Patterns will be looked for in files under the following locations:'), t('Patterns list was displayed'));
    }
    // TODO: verify other pages

  }
}

/*
 * Abstract base class for testing pattern component behavior.
 */
abstract class PatternRunTestCase extends DrupalWebTestCase {

	public function setUp() {
    // Enable any modules required for the tests.
    parent::setUp('patterns');
    // TODO: how to ensure that Spyc is installed?

    // Create users.
    $this->pat_user = $this->drupalCreateUser(array('administer patterns'));
  }

  function runTest($pattern) {
    // Login the patterns administrator.
  	$this->drupalLogin($this->pat_user);
  	$this->quickRun($pattern, 'php');
    $this->quickRun($pattern, 'batch');
  }

  /*
   * Runs a pattern through the Quick Run interface.
   */
  function quickRun($pattern, $mode = 'php', $valid = TRUE) {
  	// Fill the form.
    $edit = array();
    $edit['format'] = 'yaml';
    $edit['mode'] = $mode;
    $edit['content'] = $pattern;

    // Post the form.
    $this->drupalPost('admin/patterns/quickrun', $edit, t('Run'));

    if ($valid) {
      // Check for a valid syntax run.
      $this->assertText(t('Pattern "@pattern" ran successfully.', array('@pattern' => 'Enable/disable modules')), 'Valid pattern runs without errors.');
  	} else {
      $this->assertText(t('Error(s) while processing pattern:'), 'Invalid pattern produces errors.');
  	}

  }
}

class PatternsModuleComponent extends PatternRunTestCase {

	static function getInfo() {
    return array(
      'name' => 'Test the Modules component.',
      'description' => 'Enable and disable modules.',
      'group' => 'Patterns',
    );
	}
	public function testEnableDisable() {
		    $module_pattern1 = <<<EOD
# YAML Modules Pattern
# QScience

info:
  title: Enable/disable modules
  description: Based on http://drupal.org/node/408960
  author: QScience
  category: QScience
  version: 1.0
  core: 7.x
  author_email: sbalietti@ethz.ch
  author_website: qscience.csko.hu

actions: 

  create:
      tag: modules
      - value: blog

# TODO: this is not working as expected
#  - tag: modules
#     value: blog
#     delete: 1

  delete:
      tag: modules
      - value: admin_menu
      - value: blog
      - value: forum

 
EOD;
    parent::runTest($module_pattern1);
	} 
}
// TODO: Create more test cases

